<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 破壳 - 虽不能至，心向往之</title>
    <link>https://urzz.xyz/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 破壳 - 虽不能至，心向往之</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 08 Jul 2019 20:02:35 +0000</lastBuildDate><atom:link href="https://urzz.xyz/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设计模式 - 单例模式的几种实现方式</title>
      <link>https://urzz.xyz/2019/07/08/java-singleton-pattern/</link>
      <pubDate>Mon, 08 Jul 2019 20:02:35 +0000</pubDate>
      
      <guid>https://urzz.xyz/2019/07/08/java-singleton-pattern/</guid>
      <description>定义 什么是单例模式？ 在整个系统中，一个类永远只有一个实例化的对象，被称为单例 作用 单例模式可以减少一个频繁被创建的重量级对象在多次实例化的时候</description>
    </item>
    
  </channel>
</rss>
